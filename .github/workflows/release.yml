name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  discussions: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip
          tools: composer:v2
          coverage: none

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run tests
        run: |
          if [ -f "vendor/bin/phpunit" ]; then
            ./vendor/bin/phpunit
          else
            echo "PHPUnit not available, skipping tests"
          fi

      - name: Validate baselines
        run: |
          if [ -f "scripts/validate-all.sh" ]; then
            ./scripts/validate-all.sh || echo "Some validations failed, but continuing with release"
          else
            echo "Validation script not available, skipping validation"
          fi

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Extract changelog
        id: changelog
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          if [ -f "CHANGELOG.md" ]; then
            # Extract release notes between version headers
            CHANGELOG_CONTENT=$(awk "/^## \[$VERSION\]/,/^## \[/{if(/^## \[/ && !/^## \[$VERSION\]/) exit; print}" CHANGELOG.md | head -n -1 | tail -n +3)
            
            # Save to file for GitHub release
            echo "$CHANGELOG_CONTENT" > release_notes.md
            
            # Set output (properly escaped)
            {
              echo 'CHANGELOG<<EOF'
              echo "$CHANGELOG_CONTENT"
              echo 'EOF'
            } >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=No changelog available." >> $GITHUB_OUTPUT
            echo "No changelog available." > release_notes.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ steps.get_version.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.VERSION, '-') }}
          generate_release_notes: true
          discussion_category_name: Announcements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Packagist
        if: success()
        run: |
          echo "🎉 Release created successfully!"
          echo "📦 Packagist should automatically update within a few minutes."
          echo "🔍 Monitor the release at: ${{ github.server_url }}/${{ github.repository }}/releases"

  notify:
    runs-on: ubuntu-latest
    needs: release
    if: success()
    
    steps:
      - name: Notify community
        run: |
          echo "🎉 Release v${{ needs.release.outputs.VERSION }} has been published!"
          echo "📋 Release notes and assets are available at:"
          echo "   ${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ needs.release.outputs.VERSION }}"
          echo ""
          echo "📦 Composer users can update with:"
          echo "   composer update bluelucifer/laravel-filament-phpstan"
          echo ""
          echo "🚀 Thank you to all contributors!"