name: Test Compatibility

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday
  workflow_dispatch:

jobs:
  laravel-compatibility:
    name: Laravel ${{ matrix.laravel }} - PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2', '8.3']
        laravel: ['10.*', '11.*']
        exclude:
          - php: '8.1'
            laravel: '11.*'  # Laravel 11 requires PHP 8.2+
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      
      - name: Create Laravel test project
        run: |
          composer create-project laravel/laravel test-app "${{ matrix.laravel }}" --prefer-dist --no-interaction
          cd test-app
          
          # Install PHPStan and Larastan
          composer require --dev phpstan/phpstan larastan/larastan --no-interaction
          
          # Copy baseline files
          cp -r ../baselines .
          
          # Create PHPStan configuration
          cat > phpstan.neon <<EOF
          includes:
            - vendor/larastan/larastan/extension.neon
            - baselines/laravel-${{ matrix.laravel == '11.*' && '11' || '10' }}.neon
          parameters:
            level: 5
            paths:
              - app
              - config
              - routes
          EOF
      
      - name: Run PHPStan analysis
        run: |
          cd test-app
          vendor/bin/phpstan analyse --no-progress --error-format=github || true
      
      - name: Check for critical errors
        run: |
          cd test-app
          output=$(vendor/bin/phpstan analyse --no-progress --error-format=json 2>&1 || true)
          echo "$output" | php -r "
            \$data = json_decode(file_get_contents('php://stdin'), true);
            if (isset(\$data['errors']) && count(\$data['errors']) > 0) {
              foreach (\$data['errors'] as \$error) {
                if (strpos(\$error['message'], 'Internal error') !== false) {
                  echo '✗ Critical error found: ' . \$error['message'] . PHP_EOL;
                  exit(1);
                }
              }
            }
            echo '✓ No critical errors found' . PHP_EOL;
          "

  filament-compatibility:
    name: Filament ${{ matrix.filament }} - PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2', '8.3']
        filament: ['3.2']
        laravel: ['11.*']
        exclude:
          - php: '8.1'
            laravel: '11.*'  # Laravel 11 requires PHP 8.2+
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      
      - name: Create Filament test project
        run: |
          # Create Laravel project
          composer create-project laravel/laravel test-app "${{ matrix.laravel }}" --prefer-dist --no-interaction
          cd test-app
          
          # Install Filament
          composer require filament/filament:"^${{ matrix.filament }}" --no-interaction
          
          # Install PHPStan and Larastan
          composer require --dev phpstan/phpstan larastan/larastan --no-interaction
          
          # Copy baseline files
          cp -r ../baselines .
          
          # Create PHPStan configuration
          cat > phpstan.neon <<EOF
          includes:
            - vendor/larastan/larastan/extension.neon
            - baselines/laravel-11.neon
            - baselines/filament-3.neon
          parameters:
            level: 5
            paths:
              - app
          EOF
      
      - name: Setup Filament
        run: |
          cd test-app
          php artisan filament:install --panels --no-interaction
      
      - name: Run PHPStan analysis
        run: |
          cd test-app
          vendor/bin/phpstan analyse --no-progress --error-format=github || true

  livewire-compatibility:
    name: Livewire ${{ matrix.livewire }} - PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2', '8.3']
        livewire: ['3.*']
        laravel: ['10.*', '11.*']
        exclude:
          - php: '8.1'
            laravel: '11.*'  # Laravel 11 requires PHP 8.2+
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      
      - name: Create Livewire test project
        run: |
          # Create Laravel project
          composer create-project laravel/laravel test-app "${{ matrix.laravel }}" --prefer-dist --no-interaction
          cd test-app
          
          # Install Livewire
          composer require livewire/livewire:"${{ matrix.livewire }}" --no-interaction
          
          # Install PHPStan and Larastan
          composer require --dev phpstan/phpstan larastan/larastan --no-interaction
          
          # Copy baseline files
          cp -r ../baselines .
          
          # Create PHPStan configuration
          cat > phpstan.neon <<EOF
          includes:
            - vendor/larastan/larastan/extension.neon
            - baselines/laravel-${{ matrix.laravel == '11.*' && '11' || '10' }}.neon
            - baselines/livewire-3.neon
          parameters:
            level: 5
            paths:
              - app
          EOF
      
      - name: Create sample Livewire component
        run: |
          cd test-app
          php artisan make:livewire Counter
      
      - name: Run PHPStan analysis
        run: |
          cd test-app
          vendor/bin/phpstan analyse --no-progress --error-format=github || true