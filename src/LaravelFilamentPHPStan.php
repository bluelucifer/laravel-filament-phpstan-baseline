<?php

declare(strict_types=1);

namespace BlueLucifer\LaravelFilamentPHPStan;

/**
 * Main package class for version detection and configuration
 */
class LaravelFilamentPHPStan
{
    /**
     * Get the appropriate baseline files based on detected versions
     *
     * @return array<string>
     */
    public static function getBaselines(): array
    {
        $baselines = [];
        
        // Detect Laravel version
        if (class_exists(\Illuminate\Foundation\Application::class)) {
            $laravelVersion = \Illuminate\Foundation\Application::VERSION;
            
            if (str_starts_with($laravelVersion, '11.')) {
                $baselines[] = __DIR__ . '/../baselines/laravel-11.neon';
            } elseif (str_starts_with($laravelVersion, '10.')) {
                $baselines[] = __DIR__ . '/../baselines/laravel-10.neon';
            } elseif (str_starts_with($laravelVersion, '9.')) {
                $baselines[] = __DIR__ . '/../baselines/laravel-9.neon';
            }
        }
        
        // Detect Filament version
        if (class_exists(\Filament\FilamentManager::class)) {
            // Filament v3
            if (defined('\Filament\Support\Facades\FilamentAsset::class')) {
                $baselines[] = __DIR__ . '/../baselines/filament-3.neon';
            }
            // Filament v2
            elseif (class_exists(\Filament\Facades\Filament::class)) {
                $baselines[] = __DIR__ . '/../baselines/filament-2.neon';
            }
        }
        
        // Detect Livewire version
        if (class_exists(\Livewire\Livewire::class)) {
            // Check for Livewire v3
            if (method_exists(\Livewire\Livewire::class, 'isLivewireRequestTestingOverride')) {
                $baselines[] = __DIR__ . '/../baselines/livewire-3.neon';
            }
            // Livewire v2
            else {
                $baselines[] = __DIR__ . '/../baselines/livewire-2.neon';
            }
        }
        
        // Detect Laravel Excel
        if (class_exists(\Maatwebsite\Excel\Excel::class)) {
            $baselines[] = __DIR__ . '/../baselines/laravel-excel.neon';
        }
        
        // Detect Laravel Nova
        if (class_exists(\Laravel\Nova\Nova::class)) {
            $baselines[] = __DIR__ . '/../baselines/laravel-nova.neon';
        }
        
        // Detect common Spatie packages
        if (class_exists(\Spatie\Permission\PermissionServiceProvider::class) ||
            class_exists(\Spatie\MediaLibrary\MediaLibraryServiceProvider::class) ||
            class_exists(\Spatie\Activitylog\ActivitylogServiceProvider::class)) {
            $baselines[] = __DIR__ . '/../baselines/spatie-packages.neon';
        }
        
        return array_filter($baselines, 'file_exists');
    }
    
    /**
     * Generate a custom configuration file
     *
     * @param string $outputPath
     * @return void
     */
    public static function generateConfig(string $outputPath = 'phpstan-laravel.neon'): void
    {
        $baselines = self::getBaselines();
        
        $content = "# Auto-generated PHPStan configuration for Laravel/Filament\n";
        $content .= "# Generated by bluelucifer/laravel-filament-phpstan\n\n";
        $content .= "includes:\n";
        
        foreach ($baselines as $baseline) {
            $relativePath = str_replace(__DIR__ . '/../', 'vendor/bluelucifer/laravel-filament-phpstan/', $baseline);
            $content .= "    - $relativePath\n";
        }
        
        file_put_contents($outputPath, $content);
        
        echo "Configuration generated at: $outputPath\n";
        echo "Detected and included:\n";
        foreach ($baselines as $baseline) {
            echo "  - " . basename($baseline) . "\n";
        }
    }
}